version: "2"

services:

  db:
    build: db
    read_only: true
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
      - POSTGRES_DB=mattermost
    # uncomment the following to enable backup
    #  - AWS_ACCESS_KEY_ID=XXXX
    #  - AWS_SECRET_ACCESS_KEY=XXXX
    #  - WALE_S3_PREFIX=s3://BUCKET_NAME/PATH
    #  - AWS_REGION=us-east-1

  app:
    build:
      context: app
      # uncomment following lines for team edition or change UID/GID
      # args:
      #   - edition=team
      #   - PUID=1000
      #   - PGID=1000
    restart: unless-stopped
    volumes:
      - config:/mattermost/config:rw
      - data:/mattermost/data:rw
      - logs:/mattermost/logs:rw
      - plugins:/mattermost/plugins:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      # set same as db credentials and dbname
      - MM_USERNAME=mmuser
      - MM_PASSWORD=mmuser_password
      - MM_DBNAME=mattermost
      # in case your config is not in default location
      #- MM_CONFIG=/mattermost/config/config.json

  nginx:
    image: dvaerum/nginx-with-certbot-in-docker:latest
    restart: always
    volumes:
      - ./sites-available:/etc/nginx/sites-available:ro
      - /etc/localtime:/etc/localtime:ro
      - letsencrypt:/etc/letsencrypt
    environment:
      - DOMAINS=ny.best.aau.dk,mm.best.aau.dk
      - NGINX_LOG_ACCESS=Y
      - NGINX_LOG_ERROR=Y
    depends_on:
      - app
    ports:
      - 127.0.0.1:10083:80
      - 127.0.0.1:10443:443

volumes:
  postgres:
  config:
  data:
  logs:
  plugins:
  letsencrypt:
